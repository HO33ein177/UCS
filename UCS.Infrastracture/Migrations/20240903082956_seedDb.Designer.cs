// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UCS.Infrastracture.Data;

#nullable disable

namespace UCS.Infrastracture.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240903082956_seedDb")]
    partial class seedDb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("UCS.Domain.Entities.Course", b =>
                {
                    b.Property<int>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CourseId"));

                    b.Property<int>("CourseCapacity")
                        .HasColumnType("int");

                    b.Property<DateTime>("CourseExamDateTime")
                        .HasColumnType("datetime2");

                    b.Property<double>("CourseFee")
                        .HasColumnType("float");

                    b.Property<string>("Days")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<int>("DurationMinutes")
                        .HasColumnType("int");

                    b.Property<int>("ExamDurationMinutes")
                        .HasColumnType("int");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeOnly>("StartHour")
                        .HasColumnType("time");

                    b.Property<int>("TeacherId")
                        .HasColumnType("int");

                    b.Property<int>("Units")
                        .HasColumnType("int");

                    b.HasKey("CourseId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("TeacherId");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            CourseId = 1,
                            CourseCapacity = 100,
                            CourseExamDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CourseFee = 50.0,
                            Days = "[0,2]",
                            DepartmentId = 5,
                            DurationMinutes = 120,
                            ExamDurationMinutes = 0,
                            Level = 0,
                            Name = "Calculus 1",
                            StartHour = new TimeOnly(10, 30, 0),
                            TeacherId = 6,
                            Units = 4
                        },
                        new
                        {
                            CourseId = 2,
                            CourseCapacity = 100,
                            CourseExamDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CourseFee = 50.0,
                            Days = "[6,1]",
                            DepartmentId = 5,
                            DurationMinutes = 120,
                            ExamDurationMinutes = 0,
                            Level = 0,
                            Name = "Calculus 2",
                            StartHour = new TimeOnly(10, 30, 0),
                            TeacherId = 1,
                            Units = 4
                        },
                        new
                        {
                            CourseId = 3,
                            CourseCapacity = 100,
                            CourseExamDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CourseFee = 50.0,
                            Days = "[0,2]",
                            DepartmentId = 3,
                            DurationMinutes = 120,
                            ExamDurationMinutes = 0,
                            Level = 0,
                            Name = "Holiday Physics 1",
                            StartHour = new TimeOnly(8, 30, 0),
                            TeacherId = 2,
                            Units = 3
                        },
                        new
                        {
                            CourseId = 4,
                            CourseCapacity = 100,
                            CourseExamDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CourseFee = 50.0,
                            Days = "[6,1]",
                            DepartmentId = 3,
                            DurationMinutes = 120,
                            ExamDurationMinutes = 0,
                            Level = 0,
                            Name = "Holiday Physics 2",
                            StartHour = new TimeOnly(8, 30, 0),
                            TeacherId = 3,
                            Units = 3
                        });
                });

            modelBuilder.Entity("UCS.Domain.Entities.Department", b =>
                {
                    b.Property<int>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepartmentId"));

                    b.Property<int>("DepartmentNumber")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DepartmentId");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            DepartmentId = 1,
                            DepartmentNumber = 11,
                            Name = "CE"
                        },
                        new
                        {
                            DepartmentId = 5,
                            DepartmentNumber = 10,
                            Name = "CSMath"
                        },
                        new
                        {
                            DepartmentId = 2,
                            DepartmentNumber = 12,
                            Name = "EE"
                        },
                        new
                        {
                            DepartmentId = 3,
                            DepartmentNumber = 13,
                            Name = "Physics"
                        },
                        new
                        {
                            DepartmentId = 4,
                            DepartmentNumber = 14,
                            Name = "Languages"
                        });
                });

            modelBuilder.Entity("UCS.Domain.Entities.Proffesor", b =>
                {
                    b.Property<int>("ProfId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProfId"));

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.HasKey("ProfId");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Proffesors");

                    b.HasData(
                        new
                        {
                            ProfId = 6,
                            DepartmentId = 5,
                            FullName = "firstmath lastname",
                            State = 0
                        },
                        new
                        {
                            ProfId = 1,
                            DepartmentId = 5,
                            FullName = "scndmath lastname",
                            State = 0
                        },
                        new
                        {
                            ProfId = 2,
                            DepartmentId = 1,
                            FullName = "firstce lastname",
                            State = 0
                        },
                        new
                        {
                            ProfId = 3,
                            DepartmentId = 2,
                            FullName = "firstee lastname",
                            State = 0
                        },
                        new
                        {
                            ProfId = 4,
                            DepartmentId = 3,
                            FullName = "firstphys lastname",
                            State = 0
                        },
                        new
                        {
                            ProfId = 5,
                            DepartmentId = 4,
                            FullName = "firstlang lastname",
                            State = 0
                        });
                });

            modelBuilder.Entity("UCS.Domain.Entities.Student", b =>
                {
                    b.Property<long>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("StudentId"));

                    b.Property<int?>("CourseId")
                        .HasColumnType("int");

                    b.Property<int>("Degree")
                        .HasColumnType("int");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Major")
                        .HasColumnType("int");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.HasKey("StudentId");

                    b.HasIndex("CourseId");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            StudentId = 990342348L,
                            Degree = 0,
                            DepartmentId = 1,
                            FullName = "Hosein BN",
                            Major = 6,
                            State = 16
                        });
                });

            modelBuilder.Entity("UCS.Domain.Entities.Course", b =>
                {
                    b.HasOne("UCS.Domain.Entities.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UCS.Domain.Entities.Proffesor", "Teacher")
                        .WithMany("Courses")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("UCS.Domain.Entities.Proffesor", b =>
                {
                    b.HasOne("UCS.Domain.Entities.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("UCS.Domain.Entities.Student", b =>
                {
                    b.HasOne("UCS.Domain.Entities.Course", null)
                        .WithMany("Students")
                        .HasForeignKey("CourseId");

                    b.HasOne("UCS.Domain.Entities.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("UCS.Domain.Entities.Course", b =>
                {
                    b.Navigation("Students");
                });

            modelBuilder.Entity("UCS.Domain.Entities.Proffesor", b =>
                {
                    b.Navigation("Courses");
                });
#pragma warning restore 612, 618
        }
    }
}
